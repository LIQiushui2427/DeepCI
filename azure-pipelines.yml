# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  system_accesstoken: $(System.AccessToken)

pool:
  vmImage: 'vs2017-win2016'
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

# - script: |
#     pip install pytest pytest-azurepipelines
#     pytest
#   displayName: 'pytest'

- task: CredScan@2
  inputs:
    toolMajorVersion: 'V1'
    outputFormat: 'sarif'

- task: ComponentGovernanceComponentDetection@0
  inputs:
    scanType: 'Register'
    verbosity: 'Verbose'
    alertWarningLevel: 'High'

- task: SdtReport@1
  inputs:
    AllTools: false
    APIScan: false
    BinSkim: false
    CodesignValidation: false
    CredScan: true
    FortifySCA: false
    FxCop: false
    ModernCop: false
    MSRD: false
    PoliCheck: false
    RoslynAnalyzers: false
    SDLNativeRules: false
    Semmle: false
    TSLint: false
    ToolLogsNotFoundAction: 'Standard'

- task: PublishSecurityAnalysisLogs@2
  inputs:
    ArtifactName: 'CodeAnalysisLogs'
    ArtifactType: 'Container'
    AllTools: true
    ToolLogsNotFoundAction: 'Standard'

- task: corygehr.air-autoassess.uploadScanResults.uploadScanResults@1
  displayName: 'Upload Scan Results for Analysis'
  inputs:
    areaPathParent: 'AdversarialGMM'
    areaPathChild: 'BuildScans'
    uploadUrl: 'https://airbuildscan.azurewebsites.net/api/Upload'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)